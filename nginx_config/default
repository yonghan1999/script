##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
#	listen 80 default_server;
#	listen [::]:80 default_server;


	# SSL configuration
	#
	listen 80;
	listen 443 ssl default_server;
	listen [::]:443 ssl default_server;
	server_name image.hanblog.fun;
	if ($server_port !~ 443){
    		rewrite ^(/.*)$ https://$host$1 permanent;
 	 }
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;
	#
	
	ssl_certificate /etc/nginx/certs/hanblog.fun.pem;  #需要将cert-file-name.pem替换成已上传的证书文件的名称。
    	ssl_certificate_key /etc/nginx/certs/hanblog.fun.key; #需要将cert-file-name.key替换成已上传的证书密钥文件的`名称。
	ssl_protocols TLSv1.2 TLSv1.3;
  	ssl_ciphers EECDH+CHACHA20:EECDH+CHACHA20-draft:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;
 	ssl_prefer_server_ciphers on;
  	ssl_session_cache shared:SSL:10m;
  	ssl_session_timeout 10m;
  	add_header Strict-Transport-Security "max-age=31536000";
	#root /var/www/html;

	# Add index.php to the list if you are using PHP
	# index index.html index.htm index.nginx-debian.html;

	server_name image.hanblog.fun;

#	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
#		try_files $uri $uri/ =404;
#	}

	# proxy to 8360
  	location / {
    		proxy_pass http://127.0.0.1:8360;
    		proxy_set_header Host $host;
    		proxy_set_header X-Real-IP $remote_addr;
    		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    		proxy_set_header X-Forwarded-Proto $scheme;
    		proxy_set_header REMOTE-HOST $remote_addr;
    		add_header X-Cache $upstream_cache_status;
    		# cache
    		add_header Cache-Control no-cache;
    		expires 12h;
	}	

	# pass PHP scripts to FastCGI server
	#
	#location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#
	#	# With php-fpm (or other unix sockets):
	#	fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
	#	# With php-cgi (or other tcp sockets):
	#	fastcgi_pass 127.0.0.1:9000;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}
#以下属性中，以ssl开头的属性表示与证书配置有关。
#server {
#    listen 443 ssl;
#    #配置HTTPS的默认访问端口为443。
#    #如果未在此处配置HTTPS的默认访问端口，可能会造成Nginx无法启动。
#    #如果您使用Nginx 1.15.0及以上版本，请使用listen 443 ssl代替listen 443和ssl on。
#    server_name hanblog.fun; #需要将yourdomain.com替换成证书绑定的域名。
#    root html;
#    index index.html index.htm;
#    ssl_certificate /etc/nginx/certs/hanblog.fun.pem;  #需要将cert-file-name.pem替换成已上传的证书文件的名称。
#    ssl_certificate_key /etc/nginx/certs/hanblog.fun.key; #需要将cert-file-name.key替换成已上传的证书密钥文件的名称。
#    ssl_session_timeout 5m;
#    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
#    #表示使用的加密套件的类型。
#    ssl_protocols TLSv1.2; #表示使用的TLS协议的类型。
#    ssl_prefer_server_ciphers on;
#    location / {
#        root html;  #站点目录。
#        index index.html index.htm;
#    }
#}

# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
